/* eslint-disable babel/no-invalid-this */
// –°—Ç—Ä–æ—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã:	
	const text = "13.3";
	
	console.log(parseInt(text));   // –í–µ—Ä–Ω–µ—Ç 13 (–ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å—Å—è number)	
	console.log(parseFloat(text)); // –í–µ—Ä–Ω–µ—Ç 13.3 (–ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å—Å—è number)
// ------------	
	
// –°–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤:	
	const objectName = {
		name: "Alex",
    age:  13,
            
    // –°–≤–æ–π—Å—Ç–≤–∞ –∞–∫—Ü–µ—Å—Å–æ—Ä—ã
    get userName() {      // –£ get –∏ set –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–¥–∏–Ω–∫–æ–≤—ã–µ –∏–º–µ–Ω–∞ –º–µ—Ç–æ–¥–æ–≤
      return this.name;   // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏
    },
    set userName(name) {
      this.name = name;   // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –∏–º—è
    }
  };
  objectName.userName = 'Bulochka'; // –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç
  console.log(objectName.userName); // –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç
  
  console.log(Object.keys(objectName)); 
  // üëÜ –í–µ—Ä–Ω–µ—Ç –º–∞—Å—Å–∏–≤ ['Alex', 13] –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–æ–π—Å—Ç–≤ –≤ –æ–±—ä–µ–∫—Ç–µ —Å –ø–æ–º–æ—â—å—é .length
	
  const cloneObjectName = Object.assign(objectName, {country: "USA"}); 
  // üëÜ –°–æ–∑–¥–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä–µ–∫—Ç objectName –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–æ country: "USA",
  // –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å Object.assign({}, objectName) –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å–Ω—É—é –∫–æ–ø–∏—é,
  // —Ç–æ–≥–¥–∞ objectName –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—à–µ—Ç—Å—è

  console.log(cloneObjectName); // –í—ã–≤–µ–¥–µ—Ç { name: 'Bulochka', age: 13, userName: [Getter/Setter], country: 'USA' }
  
  const videoElement = document.createElement('div');
  const subject = {
    styleForElement: {
      width: '100%',
      background: 'red',
      height: '500px'
    }
  };
  // –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å—Ç–∏–ª–µ–π –∫ —ç–ª–µ–º–µ–Ω—Ç—É
  Object.assign(videoElement.style, subject.styleForElement);
  document.body.append(videoElement);                                                                       

	const globalCloneObjectName = JSON.parse(JSON.stringify(objectName)); // –°–æ–∑–¥–∞–µ—Ç –≥–ª—É–±–æ–∫—É—é –∫–æ–ø–∏—é –æ–±—ä–µ–∫—Ç–∞ objectName
	globalCloneObjectName.age = 55;	
	console.log(globalCloneObjectName);
  console.log(objectName);
  

// ------------

// –°–≤–æ–π—Å—Ç–≤–∞:
	// –°–≤–æ–π—Å—Ç–≤–∞ document, window –∏ screen
	console.log(document.documentElement.clientWidth);             // –í–æ–∑–≤—Ä–∞—à–∞–µ—Ç —à–∏—Ä–∏–Ω—É —ç–ª–µ–º–µ–Ω—Ç–∞ (—Å padding, –±–µ–∑ –ø–æ–ª–æ—Å—ã –ø—Ä–æ–∫—Ä—É—Ç–∫–∏)
	console.log(document.documentElement.clientHeight);            // –í–æ–∑–≤—Ä–∞—à–∞–µ—Ç –≤—ã—Å–æ—Ç—É —ç–ª–µ–º–µ–Ω—Ç–∞ (—Å padding, –±–µ–∑ –ø–æ–ª–æ—Å—ã –ø—Ä–æ–∫—Ä—É—Ç–∫–∏)

	console.log(document.documentElement.offsetWidth);             // –í–æ–∑–≤—Ä–∞—à–∞–µ—Ç —à–∏—Ä–∏–Ω—É —ç–ª–µ–º–µ–Ω—Ç–∞ c —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –æ—Ç—Å—Ç—É–ø–æ–≤ –∏ –ø–æ–ª–æ—Å—ã –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
	console.log(document.documentElement.offsetHeight);            // –í–æ–∑–≤—Ä–∞—à–∞–µ—Ç –≤—ã—Å–æ—Ç—É —ç–ª–µ–º–µ–Ω—Ç–∞ c —É—á–µ—Ç–æ–º –≤—Å–µ—Ö –æ—Ç—Å—Ç—É–ø–æ–≤ –∏ –ø–æ–ª–æ—Å—ã –ø—Ä–æ–∫—Ä—É—Ç–∫–∏

	console.log(document.documentElement.scrollLeft);              // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –±—ã–ª–æ –ø—Ä–æ—Å–∫—Ä–æ–ª–µ–Ω–æ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
	console.log(document.documentElement.scrollTop);               // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –±—ã–ª–æ –ø—Ä–æ—Å–∫—Ä–æ–ª–µ–Ω–æ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –≤ –ø–∏–∫—Å–µ–ª—è—Ö
	console.log(window.pageXOffset);              								 // –ê–Ω–∞–ª–æ–≥ scrollLeft —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π —Ö—Ä–æ–º–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å window)
	console.log(window.pageYOffset);               								 // –ê–Ω–∞–ª–æ–≥ scrollTop —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π —Ö—Ä–æ–º–∞ (—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å window)

	console.log(document.documentElement.getBoundingClientRect()); // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å–æ –≤—Å–µ–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏

	window.scrollBy(10, 400); 																		 // –°–∫—Ä–æ–ª–∏—Ç –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ –æ—Å–∏ X –Ω–∞ 10px –∏ –ø–æ –æ—Å–∏ Y 400px 
	window.scrollTo(10, 400); 																		 // –°–∫—Ä–æ–ª–∏—Ç –æ—Ç –ø–æ–ª–æ–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –∞ –Ω–µ –ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ –æ—Å–∏ X –Ω–∞ 10px –∏ –ø–æ –æ—Å–∏ Y 400px 
// ------------

// –ú–µ—Ç–æ–¥—ã:	
	console.dir(objectName); 																			 // –ü–æ–∑–≤–æ–ª—è–µ—Ç —É–≤–∏–¥–µ—Ç—å –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞
	console.log(document.querySelector('.btn').matches('.black')); // –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ —É —ç–ª–µ–º–µ–Ω—Ç–∞ .btn –∫–ª–∞—Å—Å .black

	console.log(window.getComputedStyle(document.body));           // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç–∏–ª–µ–π —ç–ª–µ–º–µ–Ω—Ç–∞ (—Å—Ç–∏–ª–∏ –∏–¥—É—Ç –∏–∑ css –Ω–µ —É—á–∏—Ç–∏—ã–≤–∞–µ—Ç –∏–Ω–ª–∞–π–Ω–æ–≤—ã–µ)
	console.log(window.getComputedStyle(document.body, ":after")); // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å—Ç–∏–ª–µ–π –ø—Å–µ–≤–¥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
	
	let iSec = 1;
	function timeOutFunc () {
		if(iSec <= 5) {
			console.log(`Time out text is worked ${iSec} times`);
			iSec++;
		} else {
			console.log(`Timer stopped after ${iSec} second`);
			clearInterval (timeInterval);															// –ü—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ –≤—É–Ω–∫—Ü–∏–∏ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
		}	
	}
	const timeInterval = setInterval(timeOutFunc, 1000);					// –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º

	const timeOutStart = setTimeout(() => {												// –°—Ç–∞—Ä—Ç —Ç–∞–π–º–µ—Ä–∞
		console.log('Timer has worked');			
	}, 3000);
	clearTimeout(timeOutStart);																		// –ü—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ —Ç–∞–π–º–∞—É—Ç–∞
// ------------

// –ú–µ—Ç–æ–¥—ã –ø–µ—Ä–µ–±–æ—Ä–∞ –º–∞—Å—Å–∏–≤–æ–≤
	const names = ['Ivan', 'Ann', 'Ksenia', 'Voldemart'];
	const shortNames = names.filter(name => {											// .filter() - –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ø–æ–¥–∞—é—Ç –ø–æ–¥ –≤—ã–±–æ—Ä–∫—É
		return name.length < 5;																			// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å –º–∞—Å—Å–∏–≤–∞, —É –∫–æ—Ç–æ—Ä—ã—Ö –¥–ª–∏–Ω–∞ –º–µ–Ω—å—à–µ 5 —Å–∏–º–≤–æ–ª–æ–≤
		});
	console.log(shortNames);
	// ------------

	let asnwer = ['HeLLo', 'gOOd', 'oK'];
	asnwer = asnwer.map(item => {																	// .map() - –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –≤ –º–∞—Å–∏–≤–µ –Ω–µ —Å–æ–∑–¥–∞–≤–∞—è –∫–æ–ø–∏—é    	
		return item.toLowerCase();												
	});
	console.log(asnwer);
	// ------------

	const some = [4, 'string', false];
	console.log(some.some(item => typeof(item) === 'number'));		// .some() - –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –µ—Å–ª–∏ —Ö–æ—Ç—å –∫–∞–∫–æ–π-—Ç–æ —ç–ª–µ–º–µ–Ω—Ç –ø–æ–ø–∞–¥–µ—Ç –ø–æ–¥ —É—Å–ª–æ–≤–∏–µ
	console.log(some.every(item => typeof(item) === 'number'));		// .every() - –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –µ—Å–ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–ø–∞–¥–∞—é—Ç –ø–æ–¥ —É—Å–ª–æ–≤–∏–µ
	// ------------

	const arr = [4, 5, 1, 3, 2, 6];
	const res = arr.reduce((sum, current) => {										// .reduce((sum, current) => {return sum + current}) - –º–µ—Ç–æ–¥ —É –∫–æ—Ç–æ—Ä–æ–≥–æ –µ—Å—Ç—å 2 –∞—Ä–≥—É–º–µ–Ω—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–ª–æ–∂–µ–Ω–∏—è (–∏ –≤—ã—á–∏—Ç–∞–Ω–∏—è –µ—Å–ª–∏ —ç—Ç–æ —á–∏—Å–ª–æ–≤—ã—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è) –∑–Ω–∞—á–µ–Ω–∏–π –≤ –º–∞—Å—Å–∏–≤–µ
		console.log(`${sum} - ${current}`);													// sum - —ç—Ç–æ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å, 
		return sum + current;
	}, 3);																												// –í reduce –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Å–∫–æ–±–∫–∏ arr.reduce(sum => sum, 10) –í–µ—Ä–Ω–µ—Ç 10
	console.log(res);
	// ------------

	const individuals = {
		ivan: 'persone',
		ann: 	'persone',
		dog: 	'anumal',
		cat: 	'animal'
	};
	
	const arrIndividuals = Object.entries(individuals)	// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç –≤ –º–∞—Å—Å–∏–≤
	.filter(arr => arr[1] == 'persone')									// –í—ã–±–∏—Ä–∞–µ–º —Ç–µ —Å–≤–æ–π—Å—Ç–≤–∞ —É –∫–æ—Ç–æ—Ä—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–µ 'persone'
	.map(arr => arr[0]);																// –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –º–∞—Å—Å–∏–≤ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∏–º–µ–Ω–∞ —á—Ç–æ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –æ–±—ä–µ–∫—Ç–µ individuals
	console.log(arrIndividuals);												// [ 'ivan', 'ann' ]
  
  const changeArray = [['Goole', 'Company'], arrIndividuals];
	console.log(Object.fromEntries(changeArray));       // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –º–∞—Å—Å–∏–≤ –≤ –æ–±—ä–µ–∫—Ç. –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Å—Ç—Ä—ã—Ö –±—Ä–∞—É–∑–µ—Ä–∞—Ö –∏ –∫–æ–Ω—Å–æ–ª–∏!!!
																											// {ivan: 'ann'}																													
// ------------


// –§—É–Ω–∫—Ü–∏—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä (—Ç–æ–∂–µ —Å–∞–º–æ–µ —á—Ç–æ –∏ –∫–ª–∞—Å—Å—ã –Ω–æ –ø–æ—Å—Ç–∞—Ä–æ–º—É)
	function User(name, id) {                          				// –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
		this.name  = name;
		this.id    = id;
		this.human = true;
		this.hello = () => {
			console.log(`${this.name} says "Hello!"`);            // this –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞—Ö –∏ –∫–ª–∞—Å—Å–∞—Ö —ç—Ç–æ –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—ä–µ–∫—Ç–∞ (–±—É–¥–µ—Ç —Å—Å—ã–ª–∫–∞—Ç—å—Å—è –Ω–∞ –æ–±—ä–µ–∫—Ç)
		};
	}

	User.prototype.exit = function() {												// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
		console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${this.name} –≤—ã—à–µ–ª`); 				
	};

	const alex = new User('Alex', 1);                  			  // –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ —Å –ø–æ–º–æ—â—å —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
  const kristina = new User('Kristina', 2);
  alex.hello();                                             // Alex says "Hello!"

	console.log(alex);
	console.log(kristina);

	alex.exit();                                       			  // –í—ã–≤–æ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞

// –ö–ª–∞—Å—Å—ã
	class Rectangle {               // –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ (–∫–æ–Ω—Ü–µ–ø—Ü–∏—è)
		constructor(height, width) {  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ 
			this.height = height;
			this.width = width;
		}                             

		calcArea() {                  // –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏/–º–µ—Ç–æ–¥–∞ (–Ω–µ –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å —Å–ª–æ–≤–æ function)
			return this.height * this.width;
		}
	}

	class ColoredRectangleWithText extends Rectangle { // –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞—Å–ª–µ–¥—É–µ—Ç –≤—Å–µ –º–µ—Ç–æ–¥—ã –∏ —Å–≤–æ–π—Å—Ç–≤–∞ –∫–ª–∞—Å—Å–∞ Rectangle
		constructor(height, width, text, bgColor) {      // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç—ã –Ω–∞—Å–ª–µ–¥—É–µ–º–æ–≥–æ
			super(height, width);                          // –í—ã–∑—ã–≤–∞–µ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –Ω–∞—Å–ª–µ–¥—É–µ–º–æ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è (Rectangle), –≤–Ω—É—Ç—Ä–∏ –º–æ–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ —Å–≤–æ–π—Å—Ç–≤–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å. super() –≤—Å–µ–≥–¥–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ –ø–µ—Ä–≤–æ–º –º–µ—Å—Ç–µ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
			this.text = text;
			this.bgColor = bgColor;
		}

		showMyProps() {
			console.log(`–¢–µ–∫—Å—Ç: ${this.text}, —Ü–≤–µ—Ç: ${this.bgColor}`);
		}
	}
	const square = new Rectangle(10, 10); // (—ç–∫–∑–µ–º–ø–ª—è—Ä)
	console.log(square.calcArea());

	const block = new ColoredRectangleWithText(10, 10, 'Hi', 'red');
	block.showMyProps();
	console.log(block.calcArea());

  /*// –ò–Ω–∫–∞–ø—Å—É–ª—è—Ü–∏—è –≤ –∫–ª–∞—Å—Å–∞—Ö
    class Persone {
      constructor(name, age) {
        this.name = name;
        this._age  = age;                               // –ù–∏–∂–Ω–µ–µ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ —Å—Ä–µ–¥–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–≤ –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ —Ç–∞–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –Ω–µ–ª—å–∑—è –∏–∑–º–µ–Ω—è—Ç—å
      }
                                                        // üëáüëáüëá –ù–æ–≤—ã–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç –∫–æ—Ç–æ—Ä—ã–π –µ—â–µ –Ω–µ —Å—Ç–∞–ª –≥–ª–æ–±–∞–ª—å–Ω—ã–º
        secondName = 'Brown'                              // –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ –≤–Ω–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞
        #sex = 'Male';                                    // –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä—ã—Ç–æ–≥–æ (–Ω–µ –∏–∑–º–µ–Ω—è–µ–º–æ–≥–æ) –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–≤–æ–π—Å—Ç–≤–∞  

        returnP = () => {                                 // –¢–∞–∫–æ–π –º–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É —ç–∫–∑–µ–º–ø–ª—è—Ä—É –æ–±—ä–µ–∫—Ç–∞
          console.log(`Name: ${this.name}`);
          console.log(`Second name: ${this.secondName}`);
          console.log(`Age: ${this._age}`);
          console.log(`Sex: ${this.#sex}`);
          console.log(`-----------------`);
        }

      get age() {                                       // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤–∞ _age
        return this._age;                                 
      }

      set age(age) {                                    // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤–∞ _age
        if(typeof age === 'number' && age > 5 && age < 100) {
          this._age = age;                              
        } else {
          this._age = 'Error age';
        }
      }

      get sex() {                                        // –ú–µ—Ç–æ–¥ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–≤–æ–π—Å—Ç–≤–∞ –æ—Ç
        return this.#sex;
      }

      set sex(sex) {
        this.#sex = sex;
      }
    }

    const volodya = new Persone('Volodya', 15);
    volodya.returnP();
    volodya.age = 4;
    volodya.sex = "tree";
    volodya.returnP();
    // ------------
  */
  
// –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤—ã–∑–æ–≤–∞ this
	function showThis1() {
		// eslint-disable-next-line babel/no-invalid-this
		console.log(this);      // –¢–∞–∫–æ–π —Å–ø–æ—Å–æ–± this –≤–µ—Ä–Ω–µ—Ç –æ–±—ä–µ–∫—Ç window, –∞ –ø—Ä–∏ "use strict" –≤–µ—Ä–Ω–µ—Ç undefined
	}
	showThis1();

	const obj = {
		a: 20,
		b: 15,
		sum: function() {
			console.log(this);    // –í—ã–∑–æ–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (this) –≤–Ω—É—Ç—Ä–∏ –º–µ—Ç–æ–¥–∞ –æ–±—ä–µ–∫—Ç–∞, –±—É–¥–µ—Ç —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ —Å–∞–º –æ–±—ä–µ–∫—Ç –≤ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è

			function shout() {
				// console.log(this);  // –í–µ—Ä–Ω–µ—Ç udefined –∏–ª–∏ –æ–±—ä–µ–∫—Ç window, –ø–æ—Ç–æ–º—É —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ –º–µ—Ç–æ–¥–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–µ—Ç–æ–¥–æ–º –æ–±—ä–µ–∫—Ç–∞, —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è
			}
			shout();

			const boom = () => console.log(this); // –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –∏–º–µ–µ—Ç —Å–≤–æ–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Ç—Å–∞ –≤—ã–∑–æ–≤–∞,
																						// –æ–Ω–∞ –±—É–¥–µ—Ç –±—Ä–∞—Ç—å –µ–≥–æ —É —Å–≤–æ–µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ "obj") –∏ –±—É–¥–µ—Ç —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ –Ω–µ–≥–æ (–≤–µ—Ä–Ω–µ—Ç window –∏–ª–∏ –æ—à–∏–±–∫—É)
			boom();
		}
	};  
	obj.sum();            
	// ------------

	function sayName (surname, age) {
		// eslint-disable-next-line babel/no-invalid-this
		console.log(this);
		console.log(`${this.name} ${surname}, –µ–º—É ${age} –ª–µ—Ç`);
	}
	const user = {
		name: 'Paul'
	};
	sayName.call(user, 'Smith', 34);              // –ü—Ä–∏—Å–≤–∞–µ–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –æ–±—ä–µ–∫—Ç—É
	sayName.apply(user, ['Robenson', '52']);      // –ü—Ä–∏—Å–≤–∞–µ–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –æ–±—ä–µ–∫—Ç—É
	// üëÜ–†–∞–±–æ—Ç–∞—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤–æ, —Ä–∞–∑–Ω–∏—Ü–∞ —Ç–æ–ª—å–∫–æ –≤ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞—Ö
	// ------------

	function count(num, a, b) {
		const result = a + b;
		return `${this*num} || result = ${result}`;
	}
																								// bind —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏ –ø–æ–¥ –Ω–µ–µ –ø–æ–¥–≤—è–∑—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Ç—Å
	const bindingFunc1 = count.bind(2, 5, 10, 2); // –ü–µ—Ä–≤—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è this –∏ –±–∞–π–Ω–¥–∏—Ç—å—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞
																								// this = 2, num = 5, a = 10, b = 2
																								
	console.log(bindingFunc1());                  // –í–µ—Ä–Ω–µ—Ç "10 || result = 12"                     

	const bindingFunc2 = count.bind(3);
	console.log(bindingFunc2(1, 2, 3));           // –í–µ—Ä–Ω–µ—Ç "3 || result = 5"
	console.log(bindingFunc2(3));                 // –í–µ—Ä–Ω–µ—Ç "3 || result = NaN"
// ------------		


// –¶–∏–∫–ª—ã: 	
  const objectName2 = {
    name: "Alex",
    age:  13
  };
	for (let key in objectName2) {					   			             // "in" - –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã, –∞ "of" - –º–∞—Å—Å–∏–≤—ã	
		console.log(`–ö–ª—é—á—å ${key} –∑–Ω–∞—á–µ–Ω–∏–µ ${objectName2[key]}`); // –í–µ—Ä–Ω–µ—Ç: "–ö–ª—é—á—å name –∑–Ω–∞—á–µ–Ω–∏–µ Alex"																                             
	}
	
	const numbers = [2,3,4,8];	
	numbers.forEach(function(item, key, arr) {                 // –ü—Ä–∏–Ω–µ–º–∞–µ—Ç 3 –∞—Ä–≥—É–º–µ–Ω—Ç–∞: 1 - –∑–Ω–∞—á–µ–Ω–∏–µ, 2 - –∫–ª—é—á, —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–∞—Å—Å–∏–≤–∞ (–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –æ–±—ä–µ–∫—Ç–∞–º–∏)
		console.log(`${item} : ${key} –≤–Ω—É—Ç—Ä–∏ –º–∞—Å—Å–∏–≤–∞ ${arr}`);
	});
	
	
// –û–ø–µ—Ä–∞—Ç–æ—Ä—ã:	
	const nameObject = {
		name1: "Vanya",
		name2: "Sanya",
		name3: "Vovka"
	};	
	console.log(nameObject); // { name1: 'Vanya', name2: 'Sanya', name3: 'Vovka' }
	
	delete nameObject.name3; // –£–¥–∞–ª–∏—Ç name3 —É –æ–±—ä–µ–∫—Ç–∞ nameOgject
	
	console.log(nameObject); // { name1: 'Vanya', name2: 'Sanya' }	
	//------------
	
	console.log(2 && 1 && null && 0 && undefined); // && - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ false, –∞ || –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ true	
	//------------
	
	let a = 1;	
	a = a + 1; // 2
	a += 1; 	 // 3	
	//------------
	
	
// –ù–æ–≤—ã–µ —Ñ–∏—à–∫–∏ JS es6 –∏ –≤—ã—à–µ
	// –û–ø–µ—Ä–∞—Ç–æ—Ä—ã
	const video = ['youtube', 'vimeo', 'pornhub'],
  blogs = ['wordpress', 'livejournal', 'blogger'],
  // ... - spret –æ–ø–µ—Ä–∞—Ç–æ—Ä —Ä–∞—Å–∫—Ä—ã–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤—ã –∏ –æ–±—ä–µ–∫—Ç—ã
  internet = [...video, ...blogs, 'instagram']; 
  console.log(internet); 
  // –í–µ—Ä–Ω–µ—Ç [ 'youtube', 'vimeo', 'pornhub', 'wordpress', 'livejournal', 'blogger', 'instagram' ]
  //--------------------

  // ... - rest –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø–æ–º–µ—â–∞–µ—Ç –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –º–∞—Å—Å–∏–≤, –¥–∞–∂–µ –µ—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ —É–∫–∞–∑–∞–Ω,
  // –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ (–≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö ...rest –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è)
  // –ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω rest –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏ –æ–Ω –≤—Å–µ–≥–¥–∞–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –∫–æ–Ω—Ü–µ
  // üëáüëáüëá
	const picture = (a, b, ...rest) => {
		return console.log(a, b, rest);
  };
  picture('paint', 'photoshop', 'illustrator', 'bulocka', 'cruasanchik');
  // –ü—Ä–∏ spret –æ–ø–µ—Ä–∞—Ç–æ—Ä–µ (...array) –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å —Å–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –≤ –º–∞—Å—Å–∏–≤
	//--------------------

	// –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    const numbersArr = [3, 5, 10, 32];
    const [, , c] = numbersArr;
    console.log(c); // 10

    // –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–≤—É–º–µ—Ä–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
    const numbersArr2 = [[3, 5], [10, 32]];
    const [[,], [then2]] = numbersArr2;
    console.log(then2); // 32

    // –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–æ–≤ –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö
      function calcValues(a, b) {
        return [
          a + b,
          a - b,
          a * b,
          a / b
        ];
      }																																				// –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞
      const [,, sub = '–í—ã—á–∏—Ç–∞–Ω–∏—è –Ω–µ—Ç', mult, ...other] = calcValues(42, 10);  // ,, - –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å —Ç–µ–º —ç–ª–µ–º–µ–Ω—Ç–æ–º –∫–æ—Ç–æ—Ä—ã–π —Å–æ–≤–ø–æ–¥–∞–µ—Ç –ø–æ —Å—á–µ—Ç—É –≤ –º–∞—Å—Å–∏–≤–µ
      console.log(sub, mult, other);
      
    // –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤
    const person = {
      name: 'Max',
      age: 20,
      address: {
        country: 'Russia',
        city: 'Moscow'
      }
    };
    const {																																	 // –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞
      name: firstName = '–ë–µ–∑ –∏–º–µ–Ω–∏',																				 // –°–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é firstName –∏ –ø–æ–º–µ—â–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ name –≤–æ –≤–Ω—É—Ç—Ä—å, —Å —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ - '–ë–µ–∑ –∏–º–µ–Ω–∏'
      age,
      car = '–ú–∞—à–∏–Ω—ã –Ω–µ—Ç',
      address: {																														 // –ï—â–µ –æ–¥–Ω–∞ –¥–µ—Å—Ç—Ä–∏–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è	(–Ω–µ —Å–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é address, –∞ –∑–∞—Ö–æ–¥–∏—Ç –≤–æ–≤–Ω—É—Ç—Ä—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –∏ —É–∂–µ –ø–æ—Ç–æ–º —Å–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ homeTown –∏ country)
        country,
        city: homeTown																										  
      },
      address                                                                // –°–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é address –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–µ–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ person.address{...}
    } = person;
    // const {name, ...info} = person																				 // –°–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é, –∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–º–µ—â–∞–µ—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é info –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ–±—ä–µ–∫—Ç–∞
    console.log(firstName, age, car, country, homeTown, address);
    
    // –î–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö
      function logPerson({name: firstName = '111', age}) {
        console.log(firstName + ' ' + age);
      }
      logPerson(person);

      // üëá –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–µ–º–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–∞ (—Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
      function connect({
        host = 'localhost',
        port = 3000,
        user = 'default'} = {}){ // –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –±–µ–∑ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: {} = {}
        console.log(`host: ${host}, port: ${port}, user: ${user}`);
      }

      connect({
        user: 'Sam',  // –ü–æ—Ä—è–¥–æ–∫ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
        port: 404
      }); // host: localhost, port: 404, user: Sam

      connect(); // host: localhost, port: 3000, user: default

  //--------------------
  
  // –ë—ã—Å—Ç—Ä–∞—è –∑–∞–ø–∏—Ç—Å—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞
  const x = 25, y = 10;
  const coords = {
    // üëá –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ–±—ä—è–≤–ª—è—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤ –∏–ª–∏ –º–µ—Ç–æ–¥–æ–≤
    x,                              // –¢–æ–∂–µ —á—Ç–æ –∏ x: x,
    y,                              // –¢–æ–∂–µ —á—Ç–æ –∏ y: y,
    calcSq() {                      // –¢–æ–∂–µ —á—Ç–æ calcSq: function() {...}
      console.log(this.x * this.y); 
    }
  };
  console.log(coords);              // { x: 25, y: 10, calcSq: [Function: calcSq] }
  coords.calcSq();                  // 250
  //--------------------

	// –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
	console.log(2 ** 3); // 2 –≤ 3-–∏–π —Å—Ç–µ–ø–µ–Ω–∏ (8). –î–æ—Å—Ç—É–ø–Ω–æ —Å –≤–µ—Ä—Å–∏–∏ es7
	
	a = 1;
	let b = 1;

	console.log(!!(a && b)); // !! - –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –≤ –±—É–ª–µ–≤—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
	console.log((a && b));	 
	//--------------------

	console.log(typeof +"12"); // + –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ–≤–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
	//--------------------

	// –§—É–Ω–∫—Ü–∏–∏
    const arrowsFunction = () => { 	// –°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
      return "Hello World!";
    };
    console.log(arrowsFunction());

    const miniFunc1 = () => console.log("Mini function 2 doesn't have an argument"); // –ö–æ—Ä–æ—Ç–∫–∞—è –∑–∞–ø–∏—Å—å —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    const miniFunc2 = a => console.log(`Mini function 1 has an argument ${a}`); 		 // –ö–æ—Ä–æ—Ç–∫–∞—è –∑–∞–ø–∏—Å—å —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏ —á—Ç–æ –µ—Å—Ç—å 1 –∞—Ä–≥—É–º–µ–Ω—Ç
    miniFunc1();
    miniFunc2('Puppy');
    //--------------------
    
    function plus(string) { // –û–±—ã—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
      console.log(string);
    }
    plus('–ü—Ä–∏–≤–µ—Ç!');
    //--------------------
    
    (function(){                // –ê–Ω–æ–Ω–∏–º–Ω–∞—è —Å–∞–º–æ–≤—ã–∑—ã–≤–∞—é—â–∞—è—Å—è —Ñ—É–Ω–∫—Ü–∏—è (–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥—É–ª–µ–π)
      const persone = "Peter";  
      console.log(persone);
    }());
    //--------------------

    // –§—É–Ω–∫—Ü–∏–∏-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã
    function* generator() { // –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∏ —Ç–∞–∫ - function *generator()
      yield 'S';            // –í 'yield' –¥–µ–ª–∞–µ—Ç—Å—è –∑–∞–ø–∏—Å—å –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø–æ—Å–º–µ–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–π —Ä–∞–∑ –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞ –≤—Å–µ 'yield' –Ω–µ –∑–∞–∫–æ–Ω—á–∞—Ç—å—Å—è
      yield 'c';
      yield 'r';
      yield 'i';
      yield 'p';
      yield 't';
    }
    const str = generator();
    console.log(str.next());        // –í—Å–µ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å –º–µ—Ç–æ–¥ '.next()' –ø—Ä–∏ –≤—ã–∑–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ { value: 'S', done: false }
    console.log(str.next().value);  // c   
    console.log(str.next().value);  // r  
    console.log(str.next().value);  // i  
    console.log(str.next().value);  // p  
    console.log(str.next().value);  // t  
    console.log(str.next().value);  // undefined
    console.log(str.next());        // { value: undefined, done: true }, 'done' –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –∫–æ–≥–¥–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞–∫–æ–Ω—á–∏–ª—Å—è
    //--------------------

    function* countN(n) {
      for (let i = 0; i < n; i++) {
        yield i;                    // –Ω–∞ —ç—Ç–æ–º –º–µ—Å—Ç–µ 'yield' –ø—Ä–µ—Ä–≤–µ—Ç —Ü–∏–∫–ª –∏ –æ–Ω –Ω–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—Å—è –ø–æ–∫–∞ —Ñ—É–Ω–∫—Ü–∏—é 'count(n)' –Ω–µ –∑–∞–ø—É—Å—Ç—è—Ç –µ—â–µ —Ä–∞–∑ –∏–ª–∏ —Å–∞–º —Ü–∏–∫–ª –Ω–µ –¥–æ–π–¥–µ—Ç –¥–æ –ø—Ä–µ–¥–µ–ª–∞
      }
    }
    const counter = countN(7);
    for(let k of counter) {
      console.log(k);               // –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑, –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–≤–æ–π—Å–≤–æ '.value'
    }
  //--------------------

  // –ú–æ–¥—É–ª–∏
    // –ò–º–ø–æ—Ä—Ç/–≠–∫—Å–ø–æ—Ä—Ç
      // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ–∞–π–ª–µ some.js
      function someFunc() {   
        return "Hello world";
      }
      module.exports = someFunc; // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ someFunc()
      // –ö–æ–Ω–µ—Ü some.js

      // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º —á—Ç–æ —ç—Ç–æ —Ñ–∞–∏–ª custom.js
      const someFunction = require('./some'); // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç someFunc() –∏–∑ some.js
      someFunction();                         // –ó–∞–ø—É—Å–∫–∞–µ—Ç someFunc()
      // –ö–æ–Ω–µ—Ü custom.js
    //--------------------

    // –ò–º–ø–æ—Ä—Ç/–≠–∫—Å–ø–æ—Ä—Ç es6
      // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ–∞–π–ª–µ some2.js
        // –ú–æ–∂–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —É —á–µ–≥–æ –µ—Å—Ç—å –∏–º—è
        export let one = 1;
        let two = 2;
        export {two};             // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —É–∂–µ —Å–æ–∑–¥–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –Ω—É–∂–Ω–æ –≤ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö

        export default function sayHi() { // default - –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –±—ã–ª–æ —É–¥–æ–±–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å)
          console.log('Hello!');
        }
        // üëÜ–ú–æ–∂–Ω–æ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–∏–ª–æ–≤üëÜ
      // –ö–æ–Ω–µ—Ü some2.js

      // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º —á—Ç–æ —ç—Ç–æ —Ñ–∞–∏–ª custom2.js
        import {one1, two2} from './some2'; // –ù—É–∂–Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–∏—Å–∞—Ç—å –∏–º–µ–Ω–∞ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö {}
        console.log(one1 + ' and ' + two2); // –ú–æ–∂–Ω–æ —Å—Ä–∞–∑—É –≤—ã–≤–æ–¥–∏—Ç—å —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ñ—É–Ω–∫—Ü–∏–∏
        // –î–æ–ø–∏—Å–∞–ª üëÜ—Ü–∏—Ñ—Ä—ãüëÜ —á—Ç–æ–±—ã jshint –Ω–µ –≤—ã–ø–µ–Ω–¥—Ä–∏–≤–∞–ª—Å—è

        import {one1 as first} from './some2'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç one1 –∏ –≥–æ–≤–æ—Ä–∏–º —á—Ç–æ –µ–µ –∏–º—è –±—É–¥–µ—Ç first
        console.log(first);

        import * as data from './some2';       // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –≤—Å–µ —á—Ç–æ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ custom2 –≤ –æ–±—ä–µ–∫—Ç data
        console.log(data.one + ' and ' + data.two);

        import sayHello from './some2';        // –ò–º–ø–æ—Ä—Ç –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞ (sayHi()) –∏–∑ some2.js
        sayHello();
      // –ö–æ–Ω–µ—Ü custom2.js
    //--------------------
    // –í–ù–ò–ú–ê–ù–ò–ï! 
    // –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–æ–±–∏—Ä–∞—Ç—å –º–æ–¥—É–ª–∏,
    // –∏ –≤—ã—à–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞—é—Ç, 
    // –ø–æ—ç—Ç–æ–º—É –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å npm –ø–∞–∫–µ—Ç webpack

    // –ó–∞–ø–∏—Å—å –∫–æ—Ç–æ—Ä—É—é –ø–æ–π–º–µ—Ç –±—Ä–∞—É–∑–µ—Ä (–Ω–µ —É–¥–æ–±–µ–Ω –¥–ª—è –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–∞ –º–æ–¥—É–ª–µ–π)
      // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ñ–∞–π–ª–µ some3.js
      export function sayBye() {
        console.log('Bye!');
      }
    // –ö–æ–Ω–µ—Ü some2.js

    // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º —á—Ç–æ —ç—Ç–æ —Ñ–∞–∏–ª custom3.js
      import {sayBye as sayBue2} from './some3.js'; // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å —Ç–∏–ø —Ñ–∞–π–ª–∞ .js (–∏–º–ø–æ—Ä—Ç sayBye())
      sayBue2();
    // –ö–æ–Ω–µ—Ü custom3.js

    /*
    <html>
      <body>
        <script src="./some.js" type="module"></script>    <!-- –î–æ–∞–≤–ª—è–µ–º —Ç–∏–ø "module" -->
        <script src="./custom3.js" type="module"></script> <!-- –°–∫—Ä–∏–ø—Ç—ã —Å —ç—Ç–∏–º —Ç–∏–ø–æ–º –±—É–¥—É –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∫–∞–∫ defer -->
      </body>
    </html>
    */
  //--------------------

  //--------------------
		
	// –ü—Ä–æ—Ç–æ—Ç–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
  const soldier = {
    health: 400,
    armor: 100,
    sayHello: () => {
      console.log("Hello!");
    }
  };

	// const john = {
	//   helth: 100,
	//   lifes: 3
	// };
	// john.__proto__ = soldier; // –°—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –æ–±—ä–µ–∫—Ç—É

	// Object.setPrototypeOf(john, soldier); // –ù–æ–≤—ã–π —Å–ø–æ—Å–æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞ –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É –æ–±—ä–µ–∫—Ç—É

	const john = Object.create(soldier); // –°–æ–∑–¥–∞–Ω–∏–µ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞ –∫ –Ω–æ–≤–æ–º—É –æ–±—ä–µ–∫—Ç—É

	john.helth = 100;
	john.lifes = 3;

	console.log(Object.getPrototypeOf(john)); // –í–µ—Ä–Ω–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ç–æ—Ç–∏–ø soldier

	console.log(john.armor);
	//--------------------
	
// –î–µ–π—Å—Ç–≤–∏—è —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ	
	const box     = document.getElementById('box'),
        circles = document.querySelectorAll('.circles'),
        hearts  = document.querySelectorAll('.hearts'),
        wrapper = document.querySelector('.hearts');

	box.style.backgroundColor = 'orange';                     // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–ª–∞–π–Ω–æ–≤—ã—Ö —Å—Ç–∏–ª–µ–π
	box.style.cssText = "width: 250px; border-radius: 5px";   // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–ª–µ–π –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏

	const div  = document.createElement('div');               // –°–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–∫–∞
	const textHello = document.createTextNode('Hello World'); // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫–∞—Ç–∞ (–±–µ–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞)
	div.classList.add('black');                               // –î–æ–±–∞–≤–ª—è–µ—Ç –∫–ª–∞—Å—Å 'black'
	div.className('container div');                           // –î–æ–±–∞–≤–ª—è–µ—Ç –∫–ª–∞—Å—Å 'container' –∏ 'div' (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)

	wrapper.append(div);                                      // –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –≤ –Ω–∞—á–∞–ª–æ wrapper
	wrapper.appendChild(div);                                 // –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –≤ –Ω–∞—á–∞–ª–æ wrapper (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)
	wrapper.prepend(div);                                     // –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –≤ –∫–æ–Ω–µ—Ü wrapper
	wrapper.prependChild(div);                                // –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –≤ –∫–æ–Ω–µ—Ü wrapper (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)

	hearts[1].before(div);                                    // –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –ø–µ—Ä–µ–¥ –≤—Ç–æ—Ä—ã–º –µ–ª–µ–º–µ–Ω—Ç–æ–º hearts
	hearts[1].after(div);                                     // –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –ø–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ hearts
	wrapper.insertBefore(div, hearts[1]);                     // –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π div –ø–µ—Ä–µ–¥ –≤—Ç–æ—Ä—ã–º –µ–ª–µ–º–µ–Ω—Ç–æ–º hearts (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)

	hearts[2].remove();                                       // –£–¥–∞–ª—è–µ—Ç —É–∑–µ–ª hearts[2] –∏–∑ –¥–µ—Ä–µ–≤–∞ DOM
	wrapper.removeChild(hearts[2]);                           // –£–¥–∞–ª—è–µ—Ç —É–∑–µ–ª hearts[2] –∏–∑ –¥–µ—Ä–µ–≤–∞ DOM (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)

	hearts[3].replaceWith(circles[0]);                      // –ó–∞–º–µ–Ω—è–µ—Ç –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç hearts –Ω–∞ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç circles
	wrapper.replaceChild(circles[0], hearts[3]);            // –ó–∞–º–µ–Ω—è–µ—Ç –≤—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç hearts –Ω–∞ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç circles (—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±)

	div.textContent = "Hello";                              // –î–æ–±–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ div

	div.insertAdjacentHTML('beforebegin', '<div><h2>Hello</h2></div'); // –î–æ–±–∞–≤–ª—è–µ—Ç html —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–µ—Ä–µ–¥ div 
	div.insertAdjacentHTML('afterbegin', '<div><h2>Hello</h2></div');  // –î–æ–±–∞–≤–ª—è–µ—Ç html —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ –Ω–∞—á–∞–ª–æ div
	div.insertAdjacentHTML('beforeend', '<div><h2>Hello</h2></div');   // –î–æ–±–∞–≤–ª—è–µ—Ç html —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤ –∫–æ–Ω–µ—Ü div
	div.insertAdjacentHTML('afterend', '<div><h2>Hello</h2></div');    // –î–æ–±–∞–≤–ª—è–µ—Ç html —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ—Å–ª–µ div

	div.insertAdjacentElement('afterend', textHello); 								 // –î–æ–±–∞–≤–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ div, —Ç–∞–∫ –∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å 'beforebegin', 'afterbegin', 'beforeend'
	//--------------------
  
  console.log(document.head);                                                   // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ head
  console.log(document.documentElement);                                        // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ html 
  console.log(document.body.childNodes);                                        // –û–±—Ä–∞—â–∞–µ—Ç—Å—è –∫–æ –≤—Å–µ–º —É–∑–ª–∞–º body (—Ä–æ–¥–∏—Ç–µ–ª—å) (.childElements –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ js) 
  console.log(document.body.firstChild);                                        // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–µ—Ä–≤–æ–º—É —Ä–µ–±–µ–Ω–∫—É (–º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —É–∑–ª–æ–º)
  console.log(document.body.firstElementChild);                                 // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–µ—Ä–≤–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
  console.log(document.body.lastChild);                                         // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Ä–µ–±–µ–Ω–∫—É (–º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —É–∑–ª–æ–º)
  console.log(document.body.lastElementChild);                                  // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É

  console.log(document.querySelector('p').parentNode.parentNode);               // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ —Ä–æ–¥–∏—Ç–µ–ª—é –∏ –µ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—é (–º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —É–∑–ª–æ–º)
  console.log(document.querySelector('p').parentElement);                       // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ —Ä–æ–¥–∏—Ç–∏—Ç–µ–ª—å—Å–∫–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É

  console.log(document.querySelector('[data-current="3"]'));                    // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ –∞—Ç—Ä–∏–±—É—Ç—É
  console.log(document.querySelector('[data-current="3"]').nextSibling);        // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å–µ–¥—É (–º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–º —É–∑–ª–æ–º)
  console.log(document.querySelector('[data-current="3"]').nextElementSibling); // –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–æ—Å–µ–¥–Ω–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É

  let childElements = [];

  for (let key of document.body.childNodes) {                                   // –í—ã–±–æ—Ä–∫–∞ –¥–ª—è –µ–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–º–µ—Å—Ç–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ—Å—è –º–µ—Ç–æ–¥–∞ .childElements
    if (key.nodeName == "#text") {
        continue;
    }
    
    childElements.push(key);
  }

  console.log(childElements);
	//--------------------


//–°–æ–±—ã—Ç–∏—è
	document.addEventListener('DOMContentLoaded', (e) => { // –ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–¥, –∫–æ–≥–¥–∞ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è DOM
		console.log('Hello World!');
		console.log(e.touches);				// –°–≤–æ–π—Å—Ç–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞–ª—å—Ü–µ–≤,
																	// –∫–æ—Ç–æ—Ä—ã–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç —Å —ç–∫—Ä–∞–Ω–æ–º (–≤ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –≥–¥–µ –æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è).
																	// (–ø–∞–ª—å—Ü—ã –∫–æ—Ç–æ—Ä—ã–µ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ª–µ–∂–∞—Ç –Ω–∞ —Å–µ–Ω—Å–µ—Ä–Ω–æ–º –¥–∏—Å–ø–ª–µ–µ)
		
		console.log(e.targetTouches); // –°–≤–æ–π—Å—Ç–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞–ª—å—Ü–µ–≤,
																	// –≤–∑—è–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º.  														

		console.log(e.changedTouches);// –°–≤–æ–π—Å—Ç–≤–æ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–¥–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–∞–ª—å—Ü–µ–≤ (–∏ –≤—Ä–æ–¥–µ –¥–µ–π—Å—Ç–≤–∏–π),
																	// –∫–æ—Ç–æ—Ä—ã–µ —É—á–∞–≤—Å—Ç–≤—É—é—Ç –∏ —É—á–∞–≤—Å—Ç–≤–æ–≤–∞–ª–∏ –≤–æ –≤—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è
	});

	let i = 0;
	const showHello = e => {
    e.preventDefault();
		if (i >= 2) {
			document.body.removeEventListener('click', showHello); // –£–¥–∞–ª—è–µ—Ç —Å–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞
		} else {
			console.log(`Hello ${i}`);
		}
		i++;
	};
	document.body.addEventListener('click', showHello); // –ù–∞–∑–Ω–∞—á–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –∫–ª–∏–∫–∞ –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç body

	//–ú–æ–±–∏–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
	const testBtn = document.createElement("<button type='button'>Test btn</button>");

	testBtn.addEventListener('touchstart', () => {	// –¢–∞–ø –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É
		console.log('touchstart');			
	});

	testBtn.addEventListener('touchend', () => {		// –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å—Ä–∞–∑—É –∂–µ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ —Ç–∞–ø–∞
		console.log('touchend');
	});

	testBtn.addEventListener('touchmove', () => {		// –î–≤–∏–∂–µ–Ω–∏–µ –ø–∞–ª—å—Ü–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É
		console.log('touchmove');
	});

	testBtn.addEventListener('touchenter', () => {	// –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–∞–∫ —Ç–æ–ª—å–∫–æ –ø–∞–ª–µ—Ü –ø—Ä–æ—Å–∫–æ–ª—å–∑–∏—Ç –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç 
		console.log('touchenter');
	});

	testBtn.addEventListener('touchleave', () => {  // –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–≥–¥–∞ –ø–∞–ª–µ—Ü —Å–æ—à–µ–ª —Å —ç–ª–µ–º–µ–Ω—Ç–∞ 
		console.log('touchleave');
	});

	testBtn.addEventListener('touchcancel', () => { // –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –ø–∞–ª–µ—Ü –≤—ã—à–µ–ª –∑–∞–ø—Ä–µ–¥–µ–ª –¥–∏—Å–ø–ª–µ—è
		console.log('touchcancel');
	});
	//--------------------


// AJAX –º–µ—Ç–æ–¥—ã
const objForAjax = {
	name: "Cris",
	age: 18
};
const jsonObj = JSON.stringify(objForAjax);

console.log(jsonObj); // –ü—Ä–µ–∞–±—Ä–∞–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç –≤ JSON –æ–±—ä–µ–∫—Ç
console.log(JSON.parse(jsonObj)); // –ü—Ä–µ–∞–±—Ä–∞–∑—É–µ—Ç JSON –æ–±—ä–µ–∫—Ç –≤ –æ–±—ä–µ–∫—Ç javascript
//--------------------

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ AJAX
  // GET –ó–∞–ø—Ä–æ—Å. –ü–µ—Ä–≤—ã–π —Å–ø–æ—Å–æ–± (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π)
  const inputRub = document.querySelector('#rub'),
        inputUsd = document.querySelector('#usd');

  inputRub.addEventListener('input', () => {
    const request = new XMLHttpRequest();                                          // –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ –∫ JSON
    // request.open(method, url, async, login, pass);                              // .open - –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π —Å–æ–±–∏—Ä–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    request.open('GET', 'js/current.json');
    request.setRequestHeader('Content-type', 'application/json', 'charset=utf-8'); // –ó–∞–ø—Ä–æ—Å –Ω–∞ http –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–¥–ª—è GET –∑–∞–ø—Ä–æ—Å–∞)
    request.send();                                                                // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è POST –∑–∞–ø—Ä–æ—Å, —Ç–æ –≤ —Å–∫–æ–±–∫–∞—Ö –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–ø—Ä–æ—Å–∞

    // request.addEventListener('readystatechange', () => {                        // –°–æ–±—ã—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –≥–æ—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç (—Å—Ä–∞–±–∞—Ç—ã–≤–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑)
    // if (request.readyState === 4 && request.status === 200) {                   

    request.addEventListener('load', () => {                                       // –°–æ–±—ã—Ç–∏–µ –∫–æ—Ç–æ—Ä–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–≥–¥–∞ –∑–∞–ø—Ä–æ—Å –≥–æ—Ç–æ–≤
      if (request.status === 200) {
        const data = JSON.parse(request.response);
        inputUsd.value = (+inputRub.value / +data.current.usd).toFixed(2);
      } else {
        inputUsd.value = request.statusText;
      }
		});
		
    // status - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞ (200 - 500)
    // statusText - –¢–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (ok, not found)
    // readyState - –°–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ (0 - 4)
    // response - –°–æ–¥–µ—Ä–∂–∏—Ç –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
	});
	//--------------------

	// POST –ó–∞–ø—Ä–æ—Å. –ü–µ—Ä–≤—ã–π —Å–ø–æ—Å–æ–± (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π)
	const forms = document.querySelectorAll('form');
  forms.forEach(formItem => {
    postData(formItem);
  });
  
  function postData(form) {
    form.addEventListener('submit', (e) => {
      e.preventDefault();
      
      const request = new XMLHttpRequest();
      request.open('POST', 'server.php');
      
      // request.setRequestHeader('Content-type', 'multipart/format-data'); // multipart/format-data —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ POST –∑–∞–ø—Ä–æ—Å–∞. –ï–°–õ–ò –ò–°–ü–û–õ–¨–ó–û–í–ê–¢–¨ .setRequestHeader() (format-data) –≤–º–µ—Å—Ç–µ —Å new XMLHttpRequest() –¢–û –ó–ê–ì–û–õ–û–í–ö–ò –£–ö–ê–ó–´–í–ê–¢–¨ –ù–ï –ù–£–ñ–ù–û!
      request.setRequestHeader('Content-type', 'application/json');         // –§–æ—Ä–º–∞—Ç –¥–ª—è POST –∑–∞–ø—Ä–æ—Å–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
      const formData = new FormData(form);                                  // –ü–æ–º–æ–≥–∞–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—à–ª–∏ —Å —Ñ–æ—Ä–º—ã. form - —ç—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Ñ–æ—Ä–º–∞
      
      const object = {};
      formData.forEach(function (value, key) {                          // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤ –æ–±—ä–µ–∫—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —á—Ç–æ –ø—Ä–∏—à–ª–∏ –∏–∑ —Ñ–æ—Ä–º—ã
        object[key] = value;
      });
			console.log(formData.getAll('name'));                             // –ü–æ–ª—É—á–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Å–µ—Ö –∏–Ω–ø—É—Ç–æ–≤ —Å –∞—Ç—Ä–∏–±—É—Ç–æ–º name
			const json = JSON.stringify(object);                              // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤ JSON –æ–±—ä–µ–∫—Ç
      
      // request.send(formData);                                        // –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ 'multipart/format-data' (php) (–í —Å–∫–æ–±–∫–∞—Ö –ø—Ä–æ–ø–∏—Å–∞–Ω–æ —Ç–µ–ª–æ —Ñ–æ—Ä–º—ã)
      request.send(json);                                               // –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ 'application/json' (json)

      request.addEventListener('load', () => {
        if (request.status === 200) {
          alert(request.response);
          form.reset();                                                 // –ß–∏—Å—Ç–∏—Ç —Ñ–æ—Ä–º—É –æ—Ç –≤–≤–µ–¥–µ–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (—á–∏—Å—Ç–∏—Ç value)
        } else {
					alert(request.statusText);
        }
      });
    });
	}
	//--------------------

	// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ AJAX POST –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è php server (–¥–ª—è php —Ñ–∞–π–ª–∞)
	// $_POST = json_decode(file_get_contents("php://input"), true); // –î–µ–∫–æ–¥–∏—Ä—É–µ—Ç –¥–ª—è JSON –∑–∞–ø—Ä–æ—Å–æ–≤
	// echo var_dump($_POST);

	// GET –ó–∞–ø—Ä–æ—Å. –í—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–± (—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π)
		fetch('https://jsonplaceholder.typicode.com/todos/1')	// GET –∑–∞–ø—Ä–æ—Å –Ω–∞ —Ñ—ç–π–∫–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä
    .then(response => response.json())										// response - —ç—Ç–æ –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞, response.json() - –ø–∞—Ä—Å–∏—Ç JSON –æ–±—ä–µ—Ç–∫ –≤ JS (—Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ JSON.parse()). –ó–¥–µ—Å—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è Promise
		.then(json => console.log(json));											// –í—ã–≤–æ–¥
	//--------------------

	// POST –ó–∞–ø—Ä–æ—Å. –í—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–± (—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π)
    fetch('https://jsonplaceholder.typicode.com/posts', { // POST –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    method: 'POST',																				// –ü—Ä–æ–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥
    headers: {																						// –ó–∞–≥–æ–ª–æ–≤–∫–∏
      'Content-type': 'application/json'									
    },	
    body: JSON.stringify({name: "Alona", age: 25})			// –î–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON)
    })
    .then(response => response.json())
    .then(json => console.log(json))
    .catch(() => console.log('Not found'));								// –°—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –≤—ã–∫–ª—é—á–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –∏–ª–∏ –ø—Ä–∏ –¥—Ä—É–≥–æ–º —Å–±–æ–µ
	//--------------------

	// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã
	const posting = async (url, data) => { 									// async –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º —á—Ç–æ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π 
    const res = await fetch(url, {												// await –≥–æ–≤–æ—Ä–∏—Ç —á—Ç–æ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∫–∞–∫–æ–π-—Ç–æ –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞, –ø—Ä–µ–∂–¥–µ —á–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥
      method: 'POST',
      headers: {
        'Content-type': 'application/json'
      },
      body: JSON.stringify(data)
		});
		
		if (!res.ok) {
      throw new Error(`Could not fetch ${url}, status: ${res.status}`); // throw - –æ–ø–µ—Ä–∞—Ç–æ—Ä –æ—à–∏–±–∫–∏ (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ catch) —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ return. new Error() - –æ–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏ –∫–æ—Ç–æ—Ä–∞—è –ø–æ—è–∞–ª—è–µ—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª–∏
    }

    return await res;
	};
	
	posting('https://jsonplaceholder.typicode.com/posts', {name: "Oleg"})
  .then(post => {
    console.log(post.status);
  });
	//--------------------
// Promise (–º–µ—Ç–æ–¥ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∫–æ–¥–∞)
	const req = new Promise((resolve, reject) => {	// Promise - —ç—Ç–æ –æ–±—ä–µ–∫—Ç –±–ª–∞–≥–æ–¥–∞—Ä—è –∫–æ—Ç–æ—Ä–æ–º—É –º–æ–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥
    console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');				 		// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã (resolve, reject) resolve - –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ—Å–ª–∏ –≤—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ (–ø—Ä–∏–º–µ—Ä: –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏—à–ª–∏). reject - –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞
    const bool = false;
		setTimeout(() => {											
			if(bool) {
				resolve();														 		// –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏—é resolve	(–º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–æ–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Å–∫–æ–±–∫–∞—Ö)
			} else {
				reject();															 		// –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏—é reject (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–æ–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Å–∫–æ–±–∫–∞—Ö)
			}
		}, 2000);
	});

	req.then(() => {														// –í then –ø–∏—à–µ—Ç—Å—è —Ç–æ, —á—Ç–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª–Ω—è—Ç—Å—è –≤ resolve
		return new Promise((resolve) => { // –í then —Ç–∞–∫ –∂–µ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å Promise
			console.log('–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö...');
			setTimeout(() => {
				const product = {
					name: 'TV',
					price: 2000
				};
				
				resolve(product);											// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≤ resolve
			}, 2000);
		});
	}).then(product => {												// –ü–µ—Ä–µ–¥–∞—á–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≤ then	
		return new Promise((resolve) => {		
			console.log('–§–∏–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞...');
			setTimeout(() => {													
				product.status = 'order';
				resolve(product);
			}, 2000);	
		});
	}).then(product => {
		console.log(product);
	}).catch(text => {													// –í catch –ø–∏—à–µ—Ç—Å—è —Ç–æ, —á—Ç–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª–Ω—è—Ç—Å—è –≤ reject
		setTimeout(() => {
			text = "Not Found!";
			console.error(text);
		}, 2000);
	}).finally(() => {													// –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–≤—Å–µ–≥–¥–∞ –ø–∏—à–µ—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ)
		console.log('–ö–æ–Ω–µ—Ü –∑–∞–ø—Ä–æ—Å–∞');						  
	});
//--------------------

const test = time => {
	return new Promise(resolve => {
		setTimeout(() => resolve(), time);				
	});
};

Promise.all([test(1000), test(2000)]).then(() => {	// –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—Å–µ –ø—Ä–æ–º–∏—Å—ã –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å
	console.log('All');
});

Promise.race([test(1000), test(2000)]).then(() => { // –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Ö–æ—Ç—è–±—ã –æ–¥–∏–Ω –ø—Ä–æ–º–∏—Å—ã –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
	console.log('Race');
});
//--------------------

//JS –∞—Ç—Ä–∏–±—É—Ç—ã
/*
	<script defer src="script"></script> <!-- defer - –∑–∞–≥—Ä—É–∂–∞–µ—Ç js —Ñ–∞–∏–ª –≤ —Ñ–æ–Ω–µ –∏ –≥–æ–≤–æ—Ä–∏—Ç DOM 
																				—á—Ç–æ–±—ã –æ–Ω–∞ –µ–≥–æ –∑–∞–ø—É—Å—Ç–∏–ª –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.
																				(—Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–æ —Å–æ–±—ã—Ç–∏—è 'DOMContentLoaded')
																				–°–∫—Ä–∏—Ç–ø—ã —Å –∞—Ç—Ä–∏–±—É—Ç–æ–º defer –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ -->

	<script async src="script"></script> <!-- async - –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤ —Ñ–æ–Ω–µ —Ñ–∞–∏–ª, –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç DOM.
																				–≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ -->
*/
//--------------------

// –ó–∞–ø—É—Å–∫ json-server
// json-server name_of_file.json
//--------------------

// –†–∞–±–æ—Ç–∞ —Å –ö—ç—à–µ–º
	// Local Storage
	localStorage.setItem('i', 1); // –ó–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ local Storage –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é i —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ 1
  localStorage.getItem('i');    // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∞–Ω–Ω–æ–π –≤ local Storage = 1
  localStorage.removeItem('i'); // –£–¥–∞–ª—è–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é i –∏–∑ local Storage
	localStorage.clear();         // –ü–æ–ª–Ω–æ—Å—Ç—å—é —á–∏—Å—Ç–∏—Ç localStorage
	
	const cities = {
		one: "Odessa",
		two: "Kiev",
		three: "Lvov"
  };
  
  localStorage.setItem('cities', JSON.stringify(cities)); // –ü—Ä–∞–≤–∏–ª—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –æ–±—ä–µ–∫—Ç–∞ –≤ Local Storage
  console.log(JSON.parse(localStorage.getItem('cities'))); 
//--------------------
  
// –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
  const ans = 'ANNa';
  const reg = /n/i;
  
  console.log(ans.search(reg)); // .search() –¥–µ–ª–∞–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—é –≤ reg –≤–µ—Ä–Ω–µ—Ç 1 –∏–ª–∏ -1
  console.log(ans.match(reg));  // .match() –¥–µ–ª–∞–µ—Ç –ø–æ–∏—Å–∫ –ø–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—é –≤ reg –≤–µ—Ä–Ω–µ—Ç –º–∞—Å—Å–∏–≤ [ 'N', index: 1, input: 'ANNa', groups: undefined ]

  const pass = "1234";
  console.log(pass.replace(/./g, "*")); // .replace() –¥–µ–ª–∞–µ—Ç –∑–∞–º–µ–Ω—É –≤ —Å—Ç—Ä–æ–∫–µ pass –Ω–∞ *
  console.log(/3/g.test(pass));         // .test() –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true/false

  console.log(pass.match(/\d/));

  // –§–ª–∞–≥–∏
  // i - –∏—â–µ—Ç –≤ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞
  // g - –∏—â–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤—Ö–æ–∂–¥–µ–Ω–∏–π (–≤ .search() –∏—â–µ—Ç —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ)
  // m - –≤–∫–ª—é—á–∞–µ—Ç –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–π —Ä–µ–∂–∏–º

  // –ü—Ä–∞–≤–∏–ª–∞
  // . - –∏—â–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å—Ç—Ä–æ–∫–µ

  // –ö–ª–∞—Å—Å—ã
  // \d - –∏—à–µ—Ç —Ü–∏—Ñ—Ä—ã
  // \w - –∏—â–µ—Ç —Å–ª–æ–≤–∞
  // \s - –∏—â–µ—Ç –ø—Ä–æ–±–µ–ª—ã

  // \D - –∏—à–µ—Ç –Ω–µ —Ü–∏—Ñ—Ä—ã
  // \W - –∏—â–µ—Ç –Ω–µ —Å–ª–æ–≤–∞
  // \S - –∏—â–µ—Ç –Ω–µ –ø—Ä–æ–±–µ–ª—ã
//--------------------

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
  try {                         // –û–ø–µ—Ä–∞—Ç–æ—Ä 'try' –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ–∫–∞ –≤–Ω—É—Ç—Ä–∏ –Ω–µ –≤–æ–∑–Ω–∏–∫–Ω–µ—Ç –æ—à–∏–±–∫–∞
    console.log('Normal');
    //console.log(a1);          // –ó–¥–µ—Å—å –∫–æ–¥ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∏ –≤–µ—Ä–Ω–µ—Ç 'catch'
    console.log('Result');
  } catch(error) {              // –û–ø–µ—Ä–∞—Ç–æ—Ä 'catch' —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –≤ 'try' –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –æ—à–∏–±–∫–∞
    console.log(error);         // –û–±—ä–µ–∫—Ç –æ—à–∏–±–∫–∏
    console.log(error.name);    // –ù–∞–∑–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
    console.log(error.message); // –°–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏
    console.log(error.stack);   // –°—Ç–∞–∫ –æ—à–∏–±–∫–∏
  } finally {                   // –ö–∞–∫ –∏ –≤ promise –∫–æ–¥ –≤ –æ–ø–µ—Ä–∞—Ç–æ—Ä–µ 'finally' –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤—Å–µ–≥–¥–∞
    console.log('Continue');
  }
  // –í—Å–µ —á—Ç–æ –±—É–¥–µ—Ç –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–∏–∂–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ 'try catch' –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–∂–µ –µ—Å–ª–∏ –≤ 'try' –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞.
//--------------------

// –ê–Ω–∏–º–∞—Ü–∏—è –≤ js
  const btn              = document.querySelector('.btn'),
        boxContainer     = document.querySelector('.box'),
        wrapperContainer = document.querySelector('.wrapper');

  let position = 0,
      animationIdStart, 
      animationIdRevers;

  function aniFunc() {
    cancelAnimationFrame(animationIdRevers);                    // –û—Ç–º–µ–Ω—è–µ—Ç –º–µ—Ç–æ–¥ requestAnimationFrame
    boxContainer.style.left = `${position}px`;
    boxContainer.style.top = `${position}px`;
    position++;
    console.log('work aniFunc');

    if (position < 298) {
      animationIdStart = requestAnimationFrame(aniFunc);       // –ó–∞–ø—É—Å–∫ –º–µ—Ç–æ–¥–∞ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    } else {
      console.log('end aniFunc');
    }
  }

  function revAniFunc() {
    cancelAnimationFrame(animationIdStart);
    boxContainer.style.left = `${position}px`;
    boxContainer.style.top = `${position}px`;
    position--;

    if (position >= 2) {
      console.log('work revAniFunc');
      animationIdRevers = requestAnimationFrame(revAniFunc);
    } else {
      console.log('end revAniFunc');
    }
  }

  btn.addEventListener('click', () => requestAnimationFrame(aniFunc));
  boxContainer.addEventListener('click', () => requestAnimationFrame(revAniFunc));

  wrapperContainer.addEventListener('click', (e) => {
    const target = e.target;
    if(target && target == wrapperContainer) {
      cancelAnimationFrame(animationIdStart);
      cancelAnimationFrame(animationIdRevers);
      console.log('Stop');
    }
  });

  // Html template for animation 
    // <!DOCTYPE html>
    // <html lang="ru">
    //   <head>
    //     <meta charset="utf-8">
    //     <meta http-equiv="X-UA-Compatible" content="IE=edge">
    //     <title>Java Script</title>
    //     <link rel="stylesheet" href="styles.css">
    //   </head>
    //   <body>
    //     <button class="btn">Animation</button>
    //     <div class="wrapper">
    //         <div class="box"></div>
    //     </div>
    //     <script src="script.js"></script>
    //   </body>
    // </html>